--- net/bridge/br_input.c.orig  2022-08-26 02:28:50.757987758 +0200
+++ net/bridge/br_input.c       2022-08-26 02:30:22.266121593 +0200
@@ -333,7 +333,18 @@
                        return RX_HANDLER_PASS;

                case 0x01:      /* IEEE MAC (Pause) */
-                       goto drop;
+                        fwd_mask |= p->br->group_fwd_mask;
+                        if (fwd_mask & (1u << dest[5]))
+                 goto forward;
+                        else
+                                goto drop;
+
+                case 0x02:      /* Link Aggregation */
+                        fwd_mask |= p->br->group_fwd_mask;
+                        if (fwd_mask & (1u << dest[5]))
+                 goto forward;
+                        else
+                                goto drop;

                case 0x0E:      /* 802.1AB LLDP */
                        fwd_mask |= p->br->group_fwd_mask;

--- net/bridge/br_netlink.c.orig        2022-08-26 02:33:58.695135005 +0200
+++ net/bridge/br_netlink.c     2022-08-26 02:35:12.077244900 +0200
@@ -950,9 +950,6 @@

        if (tb[IFLA_BRPORT_GROUP_FWD_MASK]) {
                u16 fwd_mask = nla_get_u16(tb[IFLA_BRPORT_GROUP_FWD_MASK]);
-
-               if (fwd_mask & BR_GROUPFWD_MACPAUSE)
-                       return -EINVAL;
                p->group_fwd_mask = fwd_mask;
        }

@@ -1255,9 +1252,6 @@

        if (data[IFLA_BR_GROUP_FWD_MASK]) {
                u16 fwd_mask = nla_get_u16(data[IFLA_BR_GROUP_FWD_MASK]);
-
-               if (fwd_mask & BR_GROUPFWD_RESTRICTED)
-                       return -EINVAL;
                br->group_fwd_mask = fwd_mask;
        }

--- net/bridge/br_private.h.orig        2022-08-26 02:36:15.384426116 +0200
+++ net/bridge/br_private.h     2022-08-26 02:37:33.485347708 +0200
@@ -37,15 +37,11 @@

 /* Control of forwarding link local multicast */
 #define BR_GROUPFWD_DEFAULT    0
-/* Don't allow forwarding of control protocols like STP, MAC PAUSE and LACP */
 enum {
        BR_GROUPFWD_STP         = BIT(0),
-       BR_GROUPFWD_MACPAUSE    = BIT(1),
-       BR_GROUPFWD_LACP        = BIT(2),
 };

-#define BR_GROUPFWD_RESTRICTED (BR_GROUPFWD_STP | BR_GROUPFWD_MACPAUSE | \
-                               BR_GROUPFWD_LACP)
+#define BR_GROUPFWD_RESTRICTED (BR_GROUPFWD_STP)
 /* The Nearest Customer Bridge Group Address, 01-80-C2-00-00-[00,0B,0C,0D,0F] */
 #define BR_GROUPFWD_8021AD     0xB801u

--- net/bridge/br_sysfs_br.c.orig       2022-08-26 02:38:16.869611194 +0200
+++ net/bridge/br_sysfs_br.c    2022-08-26 02:38:57.912782697 +0200
@@ -179,9 +179,6 @@
 static int set_group_fwd_mask(struct net_bridge *br, unsigned long val,
                              struct netlink_ext_ack *extack)
 {
-       if (val & BR_GROUPFWD_RESTRICTED)
-               return -EINVAL;
-
        br->group_fwd_mask = val;

        return 0;

--- net/bridge/br_sysfs_if.c.orig       2022-08-26 02:40:01.749544668 +0200
+++ net/bridge/br_sysfs_if.c    2022-08-26 02:40:25.540642533 +0200
@@ -188,8 +188,6 @@
 static int store_group_fwd_mask(struct net_bridge_port *p,
                                unsigned long v)
 {
-       if (v & BR_GROUPFWD_MACPAUSE)
-               return -EINVAL;
        p->group_fwd_mask = v;

        return 0;
